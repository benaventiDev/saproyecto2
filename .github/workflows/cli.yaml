# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: update-and-test

on:
  push:
    branches:
      - feature-*
      - develop
  pull_request:
    branches: [master, feature-new-endpoint]

jobs:
  prepare-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PERSONAL_TOKEN }} # Usar el PAT para el checkout

      - name: Set up Git identity
        run: |
          git config --global user.email "201021212@ingenieria.usac.edu.gt"
          git config --global user.name "benaventiDev"

      - name: Additional Git operations
        run: |
          # Cualquier operación Git adicional aquí
          git push origin HEAD:develop  # Ejemplo de push
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }} #

  build-and-test:
    needs: prepare-branches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.6.0"
      # Instala dependencias y/o pruebas para el backend principal
      - name: Install Dependencies (Backend)
        run: npm install
        working-directory: ./backend

      - name: Build and Test (Backend)
        run: npm run build && npm test
        working-directory: ./backend

      # Instala dependencias y pruebas para el backend-getalltickets
      - name: Install Dependencies (Backend GetAllTickets)
        run: npm install
        working-directory: ./backend-getalltickets

      - name: Build and Test (Backend GetAllTickets)
        run: npm run build && npm test
        working-directory: ./backend-getalltickets

      # Instala dependencias y/o pruebas para el frontend
      - name: Install Dependencies (Frontend)
        run: npm install
        working-directory: ./frontend

      - name: Build and Test (Frontend)
        env:
          NODE_OPTIONS: --openssl-legacy-provider
          CI: false
        run: npm run build
        working-directory: ./frontend
